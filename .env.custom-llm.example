# Local Development with Custom LLM Provider
# Copy this file to .env and update the values for your local setup with custom LLM

# Application Configuration
APP_DEBUG=true
APP_TITLE="Text-to-SQL RAG System (Custom LLM)"
APP_VERSION="1.0.0"
SECRET_KEY=your-local-secret-key-here
CONFIDENCE_THRESHOLD=0.7

# LLM Provider Configuration - Using Custom Internal API
LLM_PROVIDER=custom

# Custom LLM Configuration
CUSTOM_LLM_BASE_URL=https://your-internal-llm-api.com
CUSTOM_LLM_DEPLOYMENT_ID=your-deployment-id
CUSTOM_LLM_MODEL_NAME=your-preferred-model
CUSTOM_LLM_TIMEOUT=30
CUSTOM_LLM_MAX_RETRIES=3

# AWS Bedrock Configuration (still needed for embeddings)
AWS_REGION=us-east-1
AWS_USE_PROFILE=true
AWS_PROFILE=adfs
AWS_EMBEDDING_MODEL=amazon.titan-embed-text-v1

# Note: Even when using custom LLM, we still use Bedrock for embeddings
# The LLM model setting is ignored when LLM_PROVIDER=custom
AWS_LLM_MODEL=anthropic.claude-3-sonnet-20240229-v1:0

# OpenSearch Vector Store Configuration
OPENSEARCH_HOST=localhost
OPENSEARCH_PORT=9200
OPENSEARCH_USERNAME=admin
OPENSEARCH_PASSWORD=admin
OPENSEARCH_USE_SSL=false
OPENSEARCH_VERIFY_CERTS=false
OPENSEARCH_INDEX_NAME=documents
OPENSEARCH_VECTOR_FIELD=vector
OPENSEARCH_VECTOR_SIZE=1536

# MongoDB Configuration
MONGODB_URL=mongodb://localhost:27017
MONGODB_DATABASE=text_to_sql_rag

# Database Configuration
DATABASE_URL=sqlite:///./text_to_sql_rag.db
DATABASE_ECHO=false

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0

# External Query Execution Service
EXECUTION_API_URL=http://localhost:8001

# File Upload Settings
MAX_UPLOAD_SIZE=10485760  # 10MB
ALLOWED_FILE_TYPES=["txt", "md", "json", "sql"]

# RAG Settings
CHUNK_SIZE=1024
CHUNK_OVERLAP=200
SIMILARITY_TOP_K=5

# Meta Documents Path
META_DOCUMENTS_PATH=meta_documents